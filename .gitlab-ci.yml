# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
image: python:latest

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - /opt/conda

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy
  - post-deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - pip install build
    - python -m build --sdist
  artifacts:
    paths:
      - dist/*

test-job:   # This job runs in the test stage.
  image: continuumio/miniconda3
  stage: test    # It only starts when the job in the build stage completes successfully.
  only:
    - tags
  script:
    - conda create -c conda-forge --name pycwb root=6.26.10
    - conda init bash
    - source ~/.bashrc
    - conda activate pycwb
    - conda install -c conda-forge healpix_cxx=3.81 nds2-client python-nds2-client lalsuite setuptools_scm cmake pkg-config make gxx_linux-64 binutils
    - make install
    - python -c "import pycwb; print(pycwb.__version__)"

deploy-testPyPi:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: testing
  only:
    - tags
  script:
    - echo "Deploying to TestPyPI..."
    - pip install twine
    - TWINE_PASSWORD=${PYPI_TEST_TOKEN} TWINE_USERNAME=__token__ python -m twine upload --repository testpypi dist/*

publish:
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  only:
    - tags
  script:
    - echo "Deploying to PyPI..."
    - pip install twine
    - TWINE_PASSWORD=${PYPI_TOKEN} TWINE_USERNAME=__token__ python -m twine upload dist/*

pages:
  stage: post-deploy
  rules:
    - changes:
        - docs/**/*
    - if: '$CI_COMMIT_TAG'
  image: continuumio/miniconda3
  script:
    - conda create --name pycwb
    - conda init bash
    - source ~/.bashrc
    - conda activate pycwb
    - conda install -c conda-forge root=6.26.10 healpix_cxx=3.81 nds2-client python-nds2-client lalsuite setuptools_scm cmake pkg-config make gxx_linux-64 binutils
    - pip install pycwb
    - pip install "sphinx<7.0.0" sphinx_rtd_theme
    - make doc
    - mkdir public
    - cp -r docs/build/html/* public/
  artifacts:
    paths:
      - public